#!groovy
properties([
    disableConcurrentBuilds(),
    parameters([
        string(name: 'Branch', defaultValue: 'master', description: 'Branch name')
        string(name: 'Project', defaultValue: '', description: 'Project to build')
        string(name: 'Repo', defaultValue: '', description: 'Repository')
    ])    
])

pipeline{
    agent{
        label "master"
    }
    
    options{
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages{
        stage("docker login"){
            steps{
                echo "============== docker login =============="
                withCredentials([usernamePassword(credentialsId: 'dockerhub_jenkins', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                    docker login -u $USERNAME -p $PASSWORD
                    """
                }
            }
        }
        // stage("create docker image"){
        //     steps{
        //         echo " ============== start building image ============== "
        //         dir ('docker/toolbox') {
        //             sh 'docker build .'
        //         }
        //     }
        // }
        stage("pull project") {
            steps{
                echo "============= start pulling ============="
                cd "/usr/share/projects/${params.Project}"
                sh "git checkout ${params.Branch}"
                sh "git pull origin ${params.Repo}"
                sh '''
                docker stop vstempel/${params.Project}
                '''
                sh '''
                docker build -t vstempel/${params.Project}:latest .
                '''
                sh '''
                docker run -d vstempel/${params.Project}:latest
                '''
            }
        }
    }
}